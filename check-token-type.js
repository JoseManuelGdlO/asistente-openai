const axios = require('axios');
require('dotenv').config();

async function checkTokenType() {
  console.log('=== VERIFICANDO TIPO DE TOKEN DE FACEBOOK ===');
  
  const token = process.env.WHATSAPP_TOKEN;
  
  if (!token) {
    console.error('‚ùå No hay token configurado en WHATSAPP_TOKEN');
    return;
  }
  
  console.log('üîç Token encontrado, verificando...');
  
  try {
    // Verificar el token con Facebook
    const response = await axios.get(`https://graph.facebook.com/debug_token`, {
      params: {
        input_token: token,
        access_token: `${process.env.FB_APP_ID}|${process.env.FB_APP_SECRET}`
      }
    });
    
    const tokenInfo = response.data.data;
    
    console.log('\nüìä INFORMACI√ìN DEL TOKEN:');
    console.log('‚úÖ V√°lido:', tokenInfo.is_valid);
    console.log('üë§ Usuario ID:', tokenInfo.user_id);
    console.log('üì± Aplicaci√≥n ID:', tokenInfo.app_id);
    console.log('üìÖ Creado:', new Date(tokenInfo.issued_at * 1000).toLocaleString());
    console.log('‚è∞ Expira:', tokenInfo.expires_at ? new Date(tokenInfo.expires_at * 1000).toLocaleString() : 'Nunca');
    
    // Calcular d√≠as restantes
    if (tokenInfo.expires_at) {
      const now = Math.floor(Date.now() / 1000);
      const daysLeft = Math.ceil((tokenInfo.expires_at - now) / (24 * 60 * 60));
      console.log('üìÖ D√≠as restantes:', daysLeft);
      
      if (daysLeft < 5) {
        console.log('‚ö†Ô∏è  ¬°ATENCI√ìN! Token expira pronto');
      } else if (daysLeft < 30) {
        console.log('‚ö†Ô∏è  Token expira en menos de 30 d√≠as');
      } else {
        console.log('‚úÖ Token tiene buena duraci√≥n');
      }
    }
    
    // Verificar permisos
    console.log('\nüîê PERMISOS:');
    if (tokenInfo.scopes) {
      tokenInfo.scopes.forEach(scope => {
        console.log(`  - ${scope}`);
      });
    }
    
    // Verificar tipo de token
    console.log('\nüè∑Ô∏è  TIPO DE TOKEN:');
    if (tokenInfo.type === 'PAGE') {
      console.log('‚úÖ Es un TOKEN DE P√ÅGINA (60 d√≠as)');
    } else if (tokenInfo.type === 'USER') {
      console.log('‚ö†Ô∏è  Es un TOKEN DE USUARIO (corta duraci√≥n)');
      console.log('üí° Recomendaci√≥n: Cambiar a token de p√°gina');
    } else {
      console.log(`‚ÑπÔ∏è  Tipo: ${tokenInfo.type}`);
    }
    
    // Verificar si es para WhatsApp
    console.log('\nüì± WHATSAPP:');
    if (tokenInfo.scopes && tokenInfo.scopes.includes('whatsapp_business_messaging')) {
      console.log('‚úÖ Tiene permisos de WhatsApp Business');
    } else {
      console.log('‚ùå No tiene permisos de WhatsApp Business');
    }
    
  } catch (error) {
    console.error('‚ùå Error al verificar token:', error.response?.data || error.message);
    
    if (error.response?.data?.error?.code === 190) {
      console.log('\nüí° SUGERENCIA:');
      console.log('El token parece ser inv√°lido o haber expirado.');
      console.log('Necesitas obtener un nuevo token de p√°gina desde Facebook Developers.');
    }
  }
}

// Ejecutar si se llama directamente
if (require.main === module) {
  checkTokenType();
}

module.exports = { checkTokenType }; 